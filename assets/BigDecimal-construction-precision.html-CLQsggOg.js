import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as t,a as n,d as l,f as h,r as k,o as p,e as r}from"./app-Cp5bXEuq.js";const d={};function g(o,i){const s=k("RouteLink");return p(),e("div",null,[i[1]||(i[1]=t(`<h1 id="使用-bigdecimal-计算出现精度问题" tabindex="-1"><a class="header-anchor" href="#使用-bigdecimal-计算出现精度问题"><span>使用 BigDecimal 计算出现精度问题</span></a></h1><h2 id="精度问题怎么出现的" tabindex="-1"><a class="header-anchor" href="#精度问题怎么出现的"><span>精度问题怎么出现的</span></a></h2><p>在使用 BigDecimal 的时候，姿势不对 计算结果可能会偏离正确值 出现精度问题 代码如下:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="示例代码" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[] args) {  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    BigDecimal</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> bd </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> BigDecimal</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.999</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;使用 double构造 BigDecimal:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">bd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">multiply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> BigDecimal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">longValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    bd </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> BigDecimal</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0.999&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;使用字符串构造 BigDecimal:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">bd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">multiply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> BigDecimal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1000&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">longValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 1000 乘以 0.999 正常人心算出来结果肯定是 999 。 但是使用 BigDecimal 来计算结果却不是 999，第一个方法计算得出的结果为 998 输出如下</p><div class="language-terimal line-numbers-mode" data-highlighter="shiki" data-ext="terimal" data-title="terimal" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>使用 double构造 BigDecimal:998</span></span>
<span class="line"><span>使用字符串构造 BigDecimal:999</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>这充分说明了 BigDecimal 的构造方法影响着计算精度</strong> 所以，日常中使用 BigDecimal 需要使用 字符串来构造，或者也可以使用 <code>valueOf()</code> 来构造，该方法内部会将 小数转成 string 然后使用构造方法构造,结果是一样的。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">bd </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> BigDecimal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.999</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;使用valueOf构造 BigDecimal:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">bd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">multiply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">BigDecimal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">longValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="为什么会出现这种精度问题" tabindex="-1"><a class="header-anchor" href="#为什么会出现这种精度问题"><span>为什么会出现这种精度问题</span></a></h2><p>因为 <code>new BigDecimal(&quot;0.999&quot;)</code> 字符串是可以准确的表示出十进制小数 0.999的，而 <code>newBigDecimal(0.999)</code> 中 0.999 是 double 类型，是个近似值，并不能准确的表示出 0.999 这个十进制小数。</p><h3 id="为什么说-0-999-这个-double-类型是个近似值呢" tabindex="-1"><a class="header-anchor" href="#为什么说-0-999-这个-double-类型是个近似值呢"><span>为什么说 0.999 这个 double 类型是个近似值呢？</span></a></h3><p>因为在计算机系统中根据<a href="https://zh.wikipedia.org/wiki/IEEE_754" target="_blank" rel="noopener noreferrer">IEEE 754</a>二进制浮点数算术标准是无法精确的表示部分十进制小数的。 比如 0.999 在计算机系统中 其实是 <code>0.99899999999999999911182158029987476766109466552734375</code>这样一个无限近似值的。 所以使用 double 类型来构造 BigDecimal 就是传入这个近似值，而不是 0.999这个精确值。 所以在使用近似值计算之后 出现了误差。</p><p>所以切记切记，一定<strong>不要用 double 或者 float 等小数类型直接去构造 BigDecimal 。需要转换成 字符串.</strong></p>`,13)),n("p",null,[l(s,{to:"/notes/dev/computer-systems/Why-can't-decimals-be-represented-exactly.html"},{default:h(()=>i[0]||(i[0]=[r("那么为什么二进制无法精确表示部分十进制小数呢？")])),_:1})])])}const A=a(d,[["render",g],["__file","BigDecimal-construction-precision.html.vue"]]),y=JSON.parse('{"path":"/notes/dev/java/base/BigDecimal-construction-precision.html","title":"为什么使用 BigDecimal 计算结果会存在误差","lang":"zh-CN","frontmatter":{"title":"为什么使用 BigDecimal 计算结果会存在误差","date":"2025-03-14T18:28:18.000Z","category":["笔记"],"tag":["Java","问题记录集","后端开发备忘录"],"description":"BigDecimal 使用不当会出精度问题哦","head":[["meta",{"property":"og:url","content":"https://yeluozhiqiu.site/notes/dev/java/base/BigDecimal-construction-precision.html"}],["meta",{"property":"og:site_name","content":"叶落知秋"}],["meta",{"property":"og:title","content":"为什么使用 BigDecimal 计算结果会存在误差"}],["meta",{"property":"og:description","content":"BigDecimal 使用不当会出精度问题哦"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-19T03:22:32.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"问题记录集"}],["meta",{"property":"article:tag","content":"后端开发备忘录"}],["meta",{"property":"article:published_time","content":"2025-03-14T18:28:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-19T03:22:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"为什么使用 BigDecimal 计算结果会存在误差\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-14T18:28:18.000Z\\",\\"dateModified\\":\\"2025-03-19T03:22:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"叶子\\",\\"url\\":\\"https://yeluozhiqiu.site\\",\\"email\\":\\"caoofangqi@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"精度问题怎么出现的","slug":"精度问题怎么出现的","link":"#精度问题怎么出现的","children":[]},{"level":2,"title":"为什么会出现这种精度问题","slug":"为什么会出现这种精度问题","link":"#为什么会出现这种精度问题","children":[{"level":3,"title":"为什么说 0.999 这个 double 类型是个近似值呢？","slug":"为什么说-0-999-这个-double-类型是个近似值呢","link":"#为什么说-0-999-这个-double-类型是个近似值呢","children":[]}]}],"git":{"createdTime":1741948112000,"updatedTime":1742354552000,"contributors":[{"name":"致良知","email":"caofangqi@outlook.com","commits":3}]},"readingTime":{"minutes":1.9,"words":571},"filePathRelative":"notes/dev/java/base/BigDecimal-construction-precision.md","localizedDate":"2025年3月14日","excerpt":""}');export{A as comp,y as data};
