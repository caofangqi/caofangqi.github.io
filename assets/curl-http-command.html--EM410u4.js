import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as t,o as e}from"./app-BJl9-zLH.js";const l={};function n(h,i){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="curl-http-请求基础命令" tabindex="-1"><a class="header-anchor" href="#curl-http-请求基础命令"><span>Curl Http 请求基础命令</span></a></h1><h2 id="curl-的由来" tabindex="-1"><a class="header-anchor" href="#curl-的由来"><span>curl 的由来</span></a></h2><p>1996 年起源于为 IRC 机器人获取汇率数据的小工具，历经多次更名和功能扩展。名字源于 “Client URL”，旨在进行可靠的互联网协议数据传输。 <a href="https://everything.curl.dev/project/started.html#how-it-started" target="_blank" rel="noopener noreferrer">详情点击 How it started</a></p><h2 id="自定义请求信息" tabindex="-1"><a class="header-anchor" href="#自定义请求信息"><span>自定义请求信息</span></a></h2><h3 id="显示指定request-method-请求方法" tabindex="-1"><a class="header-anchor" href="#显示指定request-method-请求方法"><span>显示指定Request Method(请求方法)</span></a></h3><p><a href="https://everything.curl.dev/http/modify/method.html#request-method" target="_blank" rel="noopener noreferrer">Everything curl Request Method</a></p><table><thead><tr><th>序号</th><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>GET</td><td>从服务器获取资源。用于请求数据而不对数据进行更改。例如，从服务器获取网页、图片等。</td></tr><tr><td>2</td><td>POST</td><td>向服务器发送数据以创建新资源。常用于提交表单数据或上传文件。发送的数据包含在请求体中。</td></tr><tr><td>3</td><td>PUT</td><td>向服务器发送数据以更新现有资源。如果资源不存在，则创建新的资源。与 POST 不同，PUT 通常是幂等的，即多次执行相同的 PUT 请求不会产生不同的结果。</td></tr><tr><td>4</td><td>DELETE</td><td>从服务器删除指定的资源。请求中包含要删除的资源标识符。</td></tr><tr><td>5</td><td>PATCH</td><td>对资源进行部分修改。与 PUT 类似，但 PATCH 只更改部分数据而不是替换整个资源。</td></tr><tr><td>6</td><td>HEAD</td><td>类似于 GET，但服务器只返回响应的头部，不返回实际数据。用于检查资源的元数据（例如，检查资源是否存在，查看响应的头部信息）。</td></tr><tr><td>7</td><td>OPTIONS</td><td>返回服务器支持的 HTTP 方法。用于检查服务器支持哪些请求方法，通常用于跨域资源共享（CORS）的预检请求。</td></tr><tr><td>8</td><td>TRACE</td><td>回显服务器收到的请求，主要用于诊断。客户端可以查看请求在服务器中的处理路径。</td></tr><tr><td>9</td><td>CONNECT</td><td>建立一个到服务器的隧道，通常用于 HTTPS 连接。客户端可以通过该隧道发送加密的数据。</td></tr></tbody></table><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#默认会根据选项自动选择请求方法，使用 -X  和 --request 参数可以 显示指定请求方法，</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#GET 方法 </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://example.com/file</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#使用  -X 显示指定请求方法</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://example.com/file</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> POST</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#使用 --request 指定 也是一样的</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://example.com/file</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> POST</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="请求头设置" tabindex="-1"><a class="header-anchor" href="#请求头设置"><span>请求头设置</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 可以使用 -H 或者 --header 设置请求头 可以设置多个请求头</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Host: test.example&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://example.com/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如下 请求</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;https://ug.baidu.com/mcp/pc/pcsearch&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Accept: */*&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Accept-Language: zh-CN,zh;q=0.7&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Connection: keep-alive&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Origin: https://www.baidu.com&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Referer: https://www.baidu.com/&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Sec-Fetch-Dest: empty&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Sec-Fetch-Mode: cors&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Sec-Fetch-Site: same-site&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;sec-ch-ua-mobile: ?0&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;sec-ch-ua-platform: &quot;macOS&quot;&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --data-raw</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{&quot;invoke_info&quot;:{&quot;pos_1&quot;:[{}],&quot;pos_2&quot;:[{}],&quot;pos_3&quot;:[{}]}}&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="http-post" tabindex="-1"><a class="header-anchor" href="#http-post"><span>HTTP POST</span></a></h2><p><a href="https://everything.curl.dev/http/post/simple.html#simple-post" target="_blank" rel="noopener noreferrer">Everything curl - Simple POST</a></p><h3 id="简单的-post-请求" tabindex="-1"><a class="header-anchor" href="#简单的-post-请求"><span>简单的 POST 请求</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#可以使用 -d or --data 设置 表单数据 多个键值对使用 &amp; 分隔</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;name=admin&amp;shoesize=12&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://example.com/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#也可以这么写</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name=admin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shoesize=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://example.com/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#参数过大的时候 可以从文件里读取(从文件读取数据时,-d 选项会跳过回车符和换行符，所以如果您希望这些字符包含在数据中，则需要使用 --data-binary 选项) </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @filename</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://example.com</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#-d 选项会去重换行符和回车符 如果要给文件原样请求过去 可以使用  --data-binary</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --data-binary</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @filename</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://example.com/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#要发送以 @ 符号开头的 POST 请求体，为避免 curl 将其当作文件名加载，请改用 --data-raw。此选项不具备文件加载功能：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --data-raw</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;@string&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://example.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="content-type" tabindex="-1"><a class="header-anchor" href="#content-type"><span>Content-Type</span></a></h3><blockquote><p>使用 curl 的 - d 选项进行 POST 请求时，包含一个默认的头部 <code>Content-Type: application/x-www-form-urlencoded</code></p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 请求其他格式时，需要设置对应 ContentType，例如请求 json 数据时 需要设置 </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{json}&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://example.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="json" tabindex="-1"><a class="header-anchor" href="#json"><span>JSON</span></a></h3><p>curl 7.82.0 新增了 --json 选项，使用 POST发送 json 数据，等同于下面三个选项</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--data-binary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [arg]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Content-Type: application/json&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--header</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Accept: application/json&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>curl 不会处理数据，需要自行保证是 json 数据，例如:</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#简单的 json 请求</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --json</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{&quot;tool&quot;: &quot;curl&quot;}&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://example.com/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#使用本地 json 文件请求</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --json</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @json.txt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://example.com/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#从输入上取json数据</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{&quot;a&quot;:&quot;b&quot;}&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --json</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://example.com/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#可以使用多个 --json 选项 curl 会连接选项的内容 并且一次性发送数据,但是 拼接多个选项参数是简单的文本拼接，不会自动处理 json 格式合并，需要自己保证拼接之后是一个 json 格式数据</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --json</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @json.txt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --json</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;, &quot;end&quot;: &quot;true&quot;}&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://example.com/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#接受 json 数据格式化打印</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --json</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{&quot;tool&quot;: &quot;curl&quot;}&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://example.com/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">jq</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多部分表单数据-multipart-form-data" tabindex="-1"><a class="header-anchor" href="#多部分表单数据-multipart-form-data"><span>多部分表单数据(Multipart/form-data)</span></a></h3><p>一般在上传文件时，都会使用该格式。 使用 <code>-F</code> (or <code>--form</code>)选项 添加每个单独的部分数据。如下</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 提交了两部分数据  一个文本键值对和一个文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -F</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> person=anonymous</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -F</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> secret=@file.txt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://example.com/submit.cgi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档"><span>参考文档</span></a></h1><ul><li><a href="https://curl.se/docs/tutorial.html" target="_blank" rel="noopener noreferrer">curl tutorial </a></li><li><a href="https://everything.curl.dev/cmdline/copyas.html" target="_blank" rel="noopener noreferrer">Copy as curl</a></li><li><a href="https://everything.curl.dev/index.html" target="_blank" rel="noopener noreferrer">Everything curl</a></li><li><a href="https://www.runoob.com/http/http-methods.html" target="_blank" rel="noopener noreferrer">菜鸟教程-HTTP 请求方法</a></li></ul>`,27)]))}const d=s(l,[["render",n],["__file","curl-http-command.html.vue"]]),k=JSON.parse('{"path":"/notes/tools/curl/curl-http-command.html","title":"Curl Http 请求基础命令","lang":"zh-CN","frontmatter":{"title":"Curl Http 请求基础命令","date":"2025-04-24T18:00:00.000Z","category":["笔记"],"tag":["备忘录","Curl"],"description":"curl 请求 http 的基本操作，参数介绍 等","head":[["meta",{"property":"og:url","content":"https://yeluozhiqiu.site/notes/tools/curl/curl-http-command.html"}],["meta",{"property":"og:site_name","content":"叶落知秋"}],["meta",{"property":"og:title","content":"Curl Http 请求基础命令"}],["meta",{"property":"og:description","content":"curl 请求 http 的基本操作，参数介绍 等"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-24T09:44:56.000Z"}],["meta",{"property":"article:tag","content":"备忘录"}],["meta",{"property":"article:tag","content":"Curl"}],["meta",{"property":"article:published_time","content":"2025-04-24T18:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-24T09:44:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Curl Http 请求基础命令\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-24T18:00:00.000Z\\",\\"dateModified\\":\\"2025-04-24T09:44:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"叶子\\",\\"url\\":\\"https://yeluozhiqiu.site\\",\\"email\\":\\"caoofangqi@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"curl  的由来","slug":"curl-的由来","link":"#curl-的由来","children":[]},{"level":2,"title":"自定义请求信息","slug":"自定义请求信息","link":"#自定义请求信息","children":[{"level":3,"title":"显示指定Request Method(请求方法)","slug":"显示指定request-method-请求方法","link":"#显示指定request-method-请求方法","children":[]},{"level":3,"title":"请求头设置","slug":"请求头设置","link":"#请求头设置","children":[]}]},{"level":2,"title":"HTTP POST","slug":"http-post","link":"#http-post","children":[{"level":3,"title":"简单的 POST 请求","slug":"简单的-post-请求","link":"#简单的-post-请求","children":[]},{"level":3,"title":"Content-Type","slug":"content-type","link":"#content-type","children":[]},{"level":3,"title":"JSON","slug":"json","link":"#json","children":[]},{"level":3,"title":"多部分表单数据(Multipart/form-data)","slug":"多部分表单数据-multipart-form-data","link":"#多部分表单数据-multipart-form-data","children":[]}]}],"git":{"createdTime":1745487896000,"updatedTime":1745487896000,"contributors":[{"name":"致良知","email":"caofangqi@outlook.com","commits":1}]},"readingTime":{"minutes":4.25,"words":1276},"filePathRelative":"notes/tools/curl/curl-http-command.md","localizedDate":"2025年4月24日","excerpt":""}');export{d as comp,k as data};
